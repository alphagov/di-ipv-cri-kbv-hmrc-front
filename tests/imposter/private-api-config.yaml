plugin: openapi
specFile: ./private-api.yaml

pickFirstIfNoneMatch: false

validation:
  request: true

system:
  stores:
    questions:
      preloadFile: data/questions.json

resources:
  ### "payslips" journey ###
  - method: POST
    path: /session
    steps:
      - type: script
        file: scripts/reset-stores.groovy
    requestBody:
      jsonPath: $.client_id
      value: "payslips"
    response:
      statusCode: 201
      template: true
      content: |
        {
          "session_id": "payslips",
          "state": "sT@t3",
          "redirect_uri": "http://example.net"
        }

  - method: GET
    path: /question
    requestHeaders:
      session-id: "payslips"
    response:
      scriptFile: scripts/get-question.groovy

  - method: POST
    path: /answer
    requestHeaders:
      session-id: "payslips"
    response:
      scriptFile: scripts/post-answer.groovy

  - method: GET
    path: /authorization
    requestHeaders:
      session-id: "payslips"
    response:
      template: true
      statusCode: 200
      content: |
        {
          "authorizationCode": {
            "value":"auth-code-${random.uuid()}"
          },
          "state":"sT@t3",
          "redirect_uri":"http://example.net"
        }

  ### "p60" journey ###
  - method: POST
    path: /session
    steps:
      - type: script
        file: scripts/reset-stores.groovy
    requestBody:
      jsonPath: $.client_id
      value: "p60"
    response:
      statusCode: 201
      template: true
      content: |
        {
          "session_id": "p60",
          "state": "sT@t3",
          "redirect_uri": "http://example.net"
        }

  - method: GET
    path: /question
    requestHeaders:
      session-id: "p60"
    response:
      scriptFile: scripts/get-question.groovy

  - method: POST
    path: /answer
    requestHeaders:
      session-id: "p60"
    response:
      scriptFile: scripts/post-answer.groovy

  - method: GET
    path: /authorization
    requestHeaders:
      session-id: "p60"
    response:
      template: true
      statusCode: 200
      content: |
        {
          "authorizationCode": {
            "value":"auth-code-${random.uuid()}"
          },
          "state":"sT@t3",
          "redirect_uri":"http://example.net"
        }

  ### "taxCredits" journey ###
  - method: POST
    path: /session
    steps:
      - type: script
        file: scripts/reset-stores.groovy
    requestBody:
      jsonPath: $.client_id
      value: "taxCredits"
    response:
      statusCode: 201
      template: true
      content: |
        {
          "session_id": "taxCredits",
          "state": "sT@t3",
          "redirect_uri": "http://example.net"
        }

  - method: GET
    path: /question
    requestHeaders:
      session-id: "taxCredits"
    response:
      scriptFile: scripts/get-question.groovy

  - method: POST
    path: /answer
    requestHeaders:
      session-id: "taxCredits"
    response:
      scriptFile: scripts/post-answer.groovy

  - method: GET
    path: /authorization
    requestHeaders:
      session-id: "taxCredits"
    response:
      template: true
      statusCode: 200
      content: |
        {
          "authorizationCode": {
            "value":"auth-code-${random.uuid()}"
          },
          "state":"sT@t3",
          "redirect_uri":"http://example.net"
        }

  ### "selfAssessment" journey ###
  - method: POST
    path: /session
    steps:
      - type: script
        file: scripts/reset-stores.groovy
    requestBody:
      jsonPath: $.client_id
      value: "selfAssessment"
    response:
      statusCode: 201
      template: true
      content: |
        {
          "session_id": "selfAssessment",
          "state": "sT@t3",
          "redirect_uri": "http://example.net"
        }

  - method: GET
    path: /question
    requestHeaders:
      session-id: "selfAssessment"
    response:
      scriptFile: scripts/get-question.groovy

  - method: POST
    path: /answer
    requestHeaders:
      session-id: "selfAssessment"
    response:
      scriptFile: scripts/post-answer.groovy

  - method: GET
    path: /authorization
    requestHeaders:
      session-id: "selfAssessment"
    response:
      template: true
      statusCode: 200
      content: |
        {
          "authorizationCode": {
            "value":"auth-code-${random.uuid()}"
          },
          "state":"sT@t3",
          "redirect_uri":"http://example.net"
        }

  ### "income from pensions tax return" journey ###
  - method: POST
    path: /session
    steps:
      - type: script
        file: scripts/reset-stores.groovy
    requestBody:
      jsonPath: $.client_id
      value: "selfAssessmentShort"
    response:
      statusCode: 201
      template: true
      content: |
        {
          "session_id": "selfAssessmentShort",
          "state": "sT@t3",
          "redirect_uri": "http://example.net"
        }

  - method: GET
    path: /question
    requestHeaders:
      session-id: "selfAssessmentShort"
    response:
      scriptFile: scripts/get-question.groovy

  - method: POST
    path: /answer
    requestHeaders:
      session-id: "selfAssessmentShort"
    response:
      scriptFile: scripts/post-answer.groovy

  - method: GET
    path: /authorization
    requestHeaders:
      session-id: "selfAssessmentShort"
    response:
      template: true
      statusCode: 200
      content: |
        {
          "authorizationCode": {
            "value":"auth-code-${random.uuid()}"
          },
          "state":"sT@t3",
          "redirect_uri":"http://example.net"
        }

  ### 'insufficient-questions' journey ###
  - method: POST
    path: /session
    steps:
      - type: script
        file: scripts/reset-stores.groovy
    requestBody:
      jsonPath: $.client_id
      value: "insufficient-questions"
    response:
      statusCode: 201
      template: true
      content: |
        {
          "session_id": "insufficient-questions",
          "state": "sT@t3",
          "redirect_uri": "http://example.net"
        }

  - method: GET
    path: /question
    requestHeaders:
      session-id: insufficient-questions
    response:
      statusCode: 204

  - method: GET
    path: /authorization
    requestHeaders:
      session-id: "insufficient-questions"
    response:
      template: true
      statusCode: 200
      content: |
        {
          "authorizationCode": {
            "value":"auth-code-${random.uuid()}"
          },
          "state":"sT@t3",
          "redirect_uri":"http://example.net"
        }

  ### 'question-500' journey ###
  - method: GET
    path: /question
    requestHeaders:
      session-id: question-500
    response:
      statusCode: 500
      template: true
      content: Server Error

  ### 'answer-500' journey ###
  - method: POST
    path: /answer
    requestHeaders:
      session-id: answer-500
    response:
      statusCode: 500
      template: true
      content: Server Error

  ### 'authorization-error' journey ###
  - method: POST
    path: /session
    steps:
      - type: script
        file: scripts/reset-stores.groovy
    requestBody:
      jsonPath: $.client_id
      value: "authorization-error"
    response:
      statusCode: 201
      template: true
      content: |
        {
          "session_id": "authorization-error",
          "state": "sT@t3",
          "redirect_uri": "http://example.net"
        }

  - method: GET
    path: /question
    requestHeaders:
      session-id: "authorization-error"
    response:
      statusCode: 204

  - method: GET
    path: /authorization
    requestHeaders:
      session-id: "authorization-error"
    response:
      statusCode: 500
      content: |
        {
          "redirect_uri": "http://example.net",
          "oauth_error": {
            "error_description": "gateway",
            "error": "server_error"
          }
        }

  ### 'session-400' journey ###
  - method: POST
    path: /session
    steps:
      - type: script
        file: scripts/reset-stores.groovy
    requestBody:
      jsonPath: $.client_id
      value: "session-400"
    response:
      statusCode: 400
      template: true
      content: |
        {}

  ### 'session-500' journey ###
  - method: POST
    path: /session
    steps:
      - type: script
        file: scripts/reset-stores.groovy
    requestBody:
      jsonPath: $.client_id
      value: "session-500"
    response:
      statusCode: 500
      template: true
      content: |
        {}

  ### 'abandon' journey ###
  - method: POST
    path: /session
    steps:
      - type: script
        file: scripts/reset-stores.groovy
    requestBody:
      jsonPath: $.client_id
      value: "abandon"
    response:
      statusCode: 201
      template: true
      content: |
        {
          "session_id": "abandon",
          "state": "sT@t3",
          "redirect_uri": "http://example.net"
        }

  - method: GET
    path: /question
    requestHeaders:
      session-id: "abandon"
    response:
      scriptFile: scripts/get-question.groovy

  - method: POST
    path: /answer
    requestHeaders:
      session-id: "abandon"
    response:
      scriptFile: scripts/post-answer.groovy

  - method: GET
    path: /authorization
    requestHeaders:
      session-id: "abandon"
    response:
      statusCode: 500
      content: |
        {
          "redirect_uri": "http://example.net",
          "oauth_error": {
            "error_description": "acces-denied",
            "error": "access_denied"
          }
        }

  - method: POST
    path: /abandon
    response:
      statusCode: 200
      content: |
        {}

  - method: POST
    path: /abandon
    requestHeaders:
      session-id: "abandon-fail"
    response:
      statusCode: 400
      content: |
        {}
