openapi: "3.0.1"
info:
  title: "HMRC KBV Credential Issuer Private Api Specification"
  version: "2.0"

paths:
  /authorization:
    get:
      description: Front end-route provided by common-express (front-end middleware)
      parameters:
        - in: query
          name: request
          schema:
            type: string
          description: Encrypted JWT session object
          example: "eyAiBiCKD1EiFCGlHmIiJiKBLjM2N0ONPiQaR...."
        - in: query
          name: client_id
          schema:
            type: string
          description:  client identifier
          example: "ipv-core-stub"

      responses:
        "200":
          description: 200 response - provided by common-express middleware based on response from common-api session lambda
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationResponse"
        "400":
          description: 400 response - provided by common-express middleware based on response from common-api session lambda
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: 403 response  - provided by common-express middleware based on response from common-api session lambda
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: 500 response  - provided by common-express middleware based on response from common-api session lambda
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /session:
    post:
      description: > 
        Endpoint provided by private api gateway.
        Posted to via common-express middleware as part of handling the /authorization call.
      parameters:
        - in: header
          name: "X-Forwarded-For"
          schema:
            type: string
            format: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Authorization"
        required: true
      responses:
        "201":
          description: 201 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
              examples:
                201:
                  description: Session created
                  value:
                    session_id: "1fbc5730-9d17-416d-b2ca-0be90e1e93f5"
                    state: "string"
                    redirect_uri: "string"
        "400":
          description: 400 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: 500 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /fetchquestions:
    post:
      description: >
        Endpoint provided by the private api gateway, triggers the retrival of questions for the NINO supplied previously in the shared claims of the JWT.
        Returns 200 if the matching NINO has sufficient questions,
        else returns 400 with an oauth error containing invalid_request if there are not sufficient questions.
      parameters:
        - $ref: "#/components/parameters/SessionHeader"
      requestBody:
        content:
          application/json: {}
        required: false
      responses:
        "200":
          description: There are sufficient questions
          content:
            application/json: {}
        "204":
          description: Request already retrieved, but continue the user has sufficient questions (User back button recovery path)
          content:
            application/json: {}
        "400":
          description: Insufficient questions for this NINO
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommmonExpressOauthAxiosError"
              example:
                oauth_error:
                    error: "invalid_request"
                    error_description: "Invalid request"
        "403":
          description: Session not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommmonExpressOauthAxiosError"
              example:
                oauth_error:
                    error: "access_denied"
                    error_description: "Access denied"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommmonExpressOauthAxiosError"
        "504":
          description: Server error caused by a network issue with the remote api (Timeout/Unexpected Status Codes)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommmonExpressOauthAxiosError"   
              example:
                oauth_error:
                    error: "server_error"
                    error_description: "Unexpected server error"

  /question:
    get:
      description: >
        Endpoint provided by the private api gateway. Retrieves the next question for the NINO matching this session
      parameters:
        - $ref: "#/components/parameters/SessionHeader"
      responses:
        "200":
          description: Single question response (Formats TBC)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionResponse"
              examples:
                P60CurrentYear:
                  value:
                    questionKey: "rti-p60-payment-for-year"
                    info:
                      currentTaxYear: "2021/2022"
                P60CurrentYearOrPrevious:
                  value:
                    questionKey: "rti-p60-payment-for-year"
                    info:
                      currentTaxYear: "2021/2022"
                      previousTaxYear: "2020/2021"                      
                TaxCreditAmount:
                  value:
                    questionKey: "tc-amount"
        "204":
          description: No more questions (User back button recoverery path)
        "403":
          description: Session not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommmonExpressOauthAxiosError"   
              example:
                oauth_error:
                    error: "access_denied"
                    error_description: "Access denied"          
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommmonExpressOauthAxiosError"                        

  /answer:
    post:
      description: > 
        Endpoint provided by the private api gateway. 
        Saves the answer to questions, where the key provided must match the question keys for the NINO matching this session.
        On the final question being saved, all the saved answers will be auto submitted to the 3rd party api answers endpoint.
      parameters:
        - $ref: "#/components/parameters/SessionHeader"
      requestBody:
        description: Questions with single value answer (Other formats or example TBC)
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnswerPost"
        required: true
      responses:
        "200":
          description: Question answer/sequence completed - result stored
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnswerResponse"
              example: 
                response: "Question answer/sequence completed - result stored"
        "202":
          description: Submitted answer saved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnswerResponse"
              example: 
                response: "Submitted answer saved"
        "204":
          description: Question already answered, but continue (User back button recovery path)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnswerResponse"
              example: 
                response: "Continue"
        "400":
          description: Client Submission Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommmonExpressOauthAxiosError"   
              example:
                oauth_error:
                    error: "invalid_request"
                    error_description: "Invalid request"
        "409":
          description: Error with answer key summitted - e.g unknown question key / question key answered out of sequence - (unrecoverable)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommmonExpressOauthAxiosError"   
              example:
                oauth_error:
                    error: "invalid_request"
                    error_description: "Invalid request"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommmonExpressOauthAxiosError"   
              example:
                oauth_error:
                    error: "server_error"
                    error_description: "Unexpected server error"
        "504":
          description: Server error caused by a network issue with the remote api (Timeout/Unexpected Status Codes)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommmonExpressOauthAxiosError"   
              example:
                oauth_error:
                    error: "server_error"
                    error_description: "Unexpected server error"

components:
  parameters:
    SessionHeader:
      name: "session-id"
      in: header
      description: A UUID generated by the Session API to act as a primary key for the Session in DynamoDB
      required: true
      schema:
        type: "string"
      examples:
        200:
          value: "1fbc5730-9d17-416d-b2ca-0be90e1e93f5"

  schemas:
    Authorization:
      required:
        - "client_id"
        - "request"
      type: "object"
      properties:
        client_id:
          description: client identifier
          type: "string"
          minLength: 1
          example: "ipv-core-stub"
        request:
          description: Encrypted JWT Session Object
          type: "string"
          example: "eyAiBiCKD1EiFCGlHmIiJiKBLjM2N0ONPiQaR...."
    AuthorizationResponse:
      required:
        - "redirect_uri"
        - "code"
        - "state"
      type: "object"
      properties:
        code:
          type: "string"
          example: "1fbc5730-9d17-416d-b2ca-0be90e1e93f5"
        state:
          type: "string"
          example: "state"
          minLength: 1
        redirect_uri:
          type: "string"
          format: "uri"
          example: "https://di-ipv-core-stub.london.cloudapps.digital/callback"

    Error:
      title: "Error Schema"
      type: "object"
      properties:

    CommmonExpressOauthAxiosError:
      title: Common Express Oauth Error Schema
      description: Error format expected by CommonExpress Error Handler
      type: "object"
      properties:
        oauth_error:
          type: "object"
          properties:
            error:
              type: "string"
              example: "server_error"
            error_description:
              type: "string"
              example: "Unexpected server error"

    Session:
      required:
        - "session_id"
        - "state"
        - "redirect_uri"
      type: "object"
      properties:
        session_id:
          type: "string"
        state:
          type: "string"
        redirect_uri:
          type: "string"

    QuestionResponse:
      type: "object"
      properties:
        questionKey:
          description: The unique identifier for the question
          type: "string"
          example: "rti-p60-payment-for-year"
        info:
          description: Not present for all question keys
          type: "object"
          nullable: true
          properties:
            currentTaxYear:
              type: "string"
              example: "2021/2022"
            previousTaxYear:
              description: May not be present - dependant on tax year rules
              type: "string"
              nullable: true
              example: "2020/2021"

    AnswerPost:
      required:
        - "key"
        - "value"
      type: "object"
      properties:
        questionKey:
          description: The unique identifier for the question
          type: "string"
          example: "rti-p60-payment-for-year"
        value:
          description: Answer provided by the user
          type: "string"
          example: "400.94"

    AnswerResponse:
      type: "object"
      properties:
        response:
          description: Human readable indication of the current state
          type: "string"
          example: "Answer Saved"
